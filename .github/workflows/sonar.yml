name: SonarQube Analysis

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarQube:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'

      - name: Cache SonarQube packages
        uses: actions/cache@v2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Install Maven dependencies
        run: mvn install -DskipTests

      - name: SonarQube Scan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn sonar:sonar -Dsonar.projectKey=jdstreetwear -Dsonar.host.url=http://localhost:9000 -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      - name: Quality Gate
        run: |
          echo "Checking SonarQube quality gate status..."
          response=$(curl --silent --show-error --fail --user ${{ secrets.SONAR_TOKEN }}: \
            "http://localhost:9000/api/qualitygates/project_status?projectKey=jdstreetwear")
          echo "Quality gate response: $response"
          status=$(echo $response | jq -r '.projectStatus.status')
          if [ "$status" != "OK" ]; then
            echo "Quality gate failed: $status"
            exit 1
          else
            echo "Quality gate passed: $status"
          fi
